/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    public:
    void connect(TreeLinkNode *root) {
        if (root == nullptr) {
            return;
        }
        TreeLinkNode *left = root->left;
        TreeLinkNode *right = root->right;
        if (left != nullptr) {
            left->next = right;
        }
        TreeLinkNode *rightMost = right == nullptr ? left : right;
        if (rightMost != nullptr) {
            TreeLinkNode *s = root->next;
            while (s != nullptr) {
                if (s->left != nullptr) {
                    rightMost->next = s->left;
                    break;
                } else if (s->right != nullptr) {
                    rightMost->next = s->right;
                    break;
                }
                s = s->next;
            }
        }
        connect(root->right);
        connect(root->left);
    }
};